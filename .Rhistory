beyonce_lyrics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-29/beyonce_lyrics.csv')
taylor_swift_lyrics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-29/taylor_swift_lyrics.csv')
taylor_swift <- taylor_swift_lyrics %>%
tidytext::unnest_sentences(line, Lyrics) %>%
select(Artist, line)
library(magrittr)
taylor_swift <- taylor_swift_lyrics %>%
tidytext::unnest_sentences(line, Lyrics) %>%
select(Artist, line)
library(tidyverse)
taylor_swift <- taylor_swift_lyrics %>%
tidytext::unnest_sentences(line, Lyrics) %>%
select(Artist, line)
beyonce <- beyonce_lyrics %>%
select(artist_name, line)
col_names <- c("artist", "line")
colnames(beyonce) <- col_names
colnames(taylor_swift) <- col_names
lyrics <- rbind(beyonce, taylor_swift)
usethis::use_data(lyrics)
library(tayonce)
hit_song()
devtools::document()
library(tayonce)
hit_song()
verse <- sample(lyrics$line, v)
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
song <- data.frame(verse, chorus, bridge, chorus)
invisible(song)
cat(paste(verse, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(chorus, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(bridge, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(chorus, collapse = "\n")); cat("\n")
}
hit_song()
hit <- hit_song()
hit
song <- matrix(verse, chorus, bridge, chorus)
v <- 4
b<-4
c<-4
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
song <- matrix(verse, chorus, bridge, chorus)
song <- c(verse, chorus, bridge, chorus)
song
song <- c(paste(chorus, collapse = "\n"), chorus, bridge, chorus)
song
song <- c(paste(chorus, collapse = "\n"), "\n", chorus, bridge, chorus)
song
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
song <- c(paste(chorus, collapse = "\n"), "\n", paste(chorus, collapse = "\n"), "\n", paste(bridge, collapse = "\n"), "\n", paste(chorus, collapse = "\n"))
invisible(song)
cat(paste(verse, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(chorus, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(bridge, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(chorus, collapse = "\n")); cat("\n")
}
hit_song()
song
song <- c(paste(chorus, collapse = "\n"), "\n", paste(chorus, collapse = "\n"), "\n", paste(bridge, collapse = "\n"), "\n", paste(chorus, collapse = "\n"))
song
cat(song)
song <- c(paste(chorus, collapse = "\n"), "\n","\n", paste(chorus, collapse = "\n"), "\n", paste(bridge, collapse = "\n"), "\n", paste(chorus, collapse = "\n"))
song
cat(song)
song <- c(paste(chorus, collapse = "\n"), "\n","\n", paste(chorus, collapse = "\n"), "\n", "\n", paste(bridge, collapse = "\n"), "\n", "\n", paste(chorus, collapse = "\n"))
song
cat(song)
cat(paste(verse, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(chorus, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(bridge, collapse = "\n")); cat("\n");
cat("\n"); cat(paste(chorus, collapse = "\n")); cat("\n")
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
song <- c(paste(chorus, collapse = "\n"), "\n","\n", paste(chorus, collapse = "\n"), "\n", "\n", paste(bridge, collapse = "\n"), "\n", "\n", paste(chorus, collapse = "\n"))
invisible(song)
return(cat(song))
# cat(paste(verse, collapse = "\n")); cat("\n");
# cat("\n"); cat(paste(chorus, collapse = "\n")); cat("\n");
# cat("\n"); cat(paste(bridge, collapse = "\n")); cat("\n");
# cat("\n"); cat(paste(chorus, collapse = "\n")); cat("\n")
}
hit_song()
rm(list = ls())
library(tayonce)
hit_song()
devtools::document()
library(tayonce)
hit_song()
hit_song()
hit_song()
dim(lyrics)
usethis::use_mit_license()
usethis::use_mit_license("Bjorn")
library(tayonce)
lyrics
lyrics$line[1]
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
lyrics <- tayonce::lyrics
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
song <- c(paste(verse, collapse = "\n"), "\n","\n",
paste(chorus, collapse = "\n"), "\n", "\n",
paste(bridge, collapse = "\n"), "\n", "\n",
paste(chorus, collapse = "\n"))
return(cat(song))
}
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
hit_song()
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
lyrics <- tayonce::lyrics
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
title <- chorus[3]
song <- c(paste(verse, collapse = "\n"), "\n","\n",
paste(chorus, collapse = "\n"), "\n", "\n",
paste(bridge, collapse = "\n"), "\n", "\n",
paste(chorus, collapse = "\n"))
invisible(list("song_title" = title, "lyrics" = song))
return(cat(song))
}
hit_song()
hit_song()$title
song <- hit_song()
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
lyrics <- tayonce::lyrics
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
title <- chorus[3]
song <- c(paste(verse, collapse = "\n"), "\n","\n",
paste(chorus, collapse = "\n"), "\n", "\n",
paste(bridge, collapse = "\n"), "\n", "\n",
paste(chorus, collapse = "\n"))
invisible(list("song_title" = title, "lyrics" = song))
cat(song)
}
song <- hit_song()
song
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
lyrics <- tayonce::lyrics
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
title <- chorus[3]
song <- c(paste(title), "\n", "\n",
paste(verse, collapse = "\n"), "\n","\n",
paste(chorus, collapse = "\n"), "\n", "\n",
paste(bridge, collapse = "\n"), "\n", "\n",
paste(chorus, collapse = "\n"))
#invisible(list("song_title" = title, "lyrics" = song))
return(cat(song))
}
hit_song()
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
lyrics <- tayonce::lyrics
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
title <- chorus[3]
song <- c(paste("**",title,"**"), "\n", "\n",
paste(verse, collapse = "\n"), "\n","\n",
paste(chorus, collapse = "\n"), "\n", "\n",
paste(bridge, collapse = "\n"), "\n", "\n",
paste(chorus, collapse = "\n"))
#invisible(list("song_title" = title, "lyrics" = song))
return(cat(song))
}
hit_song()
#' Hit song generator
#'
#' This function allows you to generate a guaranteed #1 hit with no effort!
#' @param v numeric. Number of lines in the verse.
#' @param c numeric. Number of lines in the chorus.
#' @param b numeric. Number of lines in the bridge.
#' @export hit_song
hit_song <- function(v = 4, c = 4, b = 4){
lyrics <- tayonce::lyrics
verse <- sample(lyrics$line, v)
chorus <- sample(lyrics$line, c)
bridge <- sample(lyrics$line, b)
title <- chorus[3]
song <- c(paste("##",title,"##"), "\n", "\n",
paste(verse, collapse = "\n"), "\n","\n",
paste(chorus, collapse = "\n"), "\n", "\n",
paste(bridge, collapse = "\n"), "\n", "\n",
paste(chorus, collapse = "\n"))
#invisible(list("song_title" = title, "lyrics" = song))
return(cat(song))
}
hit_song()
